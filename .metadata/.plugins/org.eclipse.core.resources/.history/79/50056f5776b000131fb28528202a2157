package mosfet.game.net;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;

import mosfet.game.Game;
import mosfet.game.entities.PlayerMP;

public class GameServer extends Thread{
	private DatagramSocket socket;
	private Game game;
	private List<PlayerMP> connectedPlayers=new ArrayList<PlayerMP>();
	
	public void sendDataToAllClients(byte[] data) {
		for(PlayerMP p:connectedPlayers){sendData(data,p.ipAddress,p.port);}
	}
	public void sendData(byte[] data,InetAddress ipAddress, int port){
		DatagramPacket packet=new DatagramPacket(data,data.length,ipAddress,port);
		try {socket.send(packet);}
		catch (IOException e){e.printStackTrace();}
	}
	public void parsePacket(byte[] data,InetAddress address,int port){
		
	}
	public void run(){
		while(true){
			byte[] data=new byte[1024];
			DatagramPacket packet=new DatagramPacket(data,data.length);
			try {socket.receive(packet);} 
			catch (IOException e){e.printStackTrace();}
			parsePacket(packet.getData(),packet.getAddress(),packet.getPort());
//			String message=new String(packet.getData());
//			System.out.println("Client["+packet.getAddress().getHostAddress()+":"
//													+packet.getPort()+"]: "+message);
//			if(message.trim().equals("ping")){
//				System.out.println("From Client: "+message);
//				sendData("pong".getBytes(),packet.getAddress(),packet.getPort());
//			}
		}
	}
	public GameServer(Game game){
		this.game=game;
		try {this.socket=new DatagramSocket(5335);}
		catch (SocketException e){e.printStackTrace();} 
	}
}
